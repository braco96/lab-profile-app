{"ast":null,"code":"// Service module wrapping all HTTP requests related to authentication\n\nimport axios from 'axios';\n\n// Create an axios instance with the base URL of the server\nconst api = axios.create({\n  baseURL: 'http://localhost:5005'\n});\nconst signUp = user => api.post('/auth/signup', user);\nconst logIn = credentials => api.post('/auth/login', credentials);\n// Helper function to get stored JWT token\nconst getToken = () => localStorage.getItem('authToken');\nconst verifyToken = token => api.get('/auth/verify', {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\n\n// Authenticated requests include the token in the headers\nconst uploadPhoto = file => api.post('/api/upload', file, {\n  headers: {\n    Authorization: `Bearer ${getToken()}`\n  }\n});\nconst getCurrentUser = () => api.get('/api/users', {\n  headers: {\n    Authorization: `Bearer ${getToken()}`\n  }\n});\nconst editUser = user => api.put('/api/users', user, {\n  headers: {\n    Authorization: `Bearer ${getToken()}`\n  }\n});\nexport default {\n  signUp,\n  logIn,\n  verifyToken,\n  uploadPhoto,\n  getCurrentUser,\n  editUser\n};","map":{"version":3,"names":["axios","api","create","baseURL","signUp","user","post","logIn","credentials","getToken","localStorage","getItem","verifyToken","token","get","headers","Authorization","uploadPhoto","file","getCurrentUser","editUser","put"],"sources":["C:/Users/Luisbra/Desktop/proyectos/lab-profile-app/profile-app-client/src/services/auth.service.js"],"sourcesContent":["// Service module wrapping all HTTP requests related to authentication\n\nimport axios from 'axios';\n\n// Create an axios instance with the base URL of the server\nconst api = axios.create({\n  baseURL: 'http://localhost:5005'\n});\n\nconst signUp = (user) => api.post('/auth/signup', user);\nconst logIn = (credentials) => api.post('/auth/login', credentials);\n// Helper function to get stored JWT token\nconst getToken = () => localStorage.getItem('authToken');\n\nconst verifyToken = (token) =>\n  api.get('/auth/verify', { headers: { Authorization: `Bearer ${token}` } });\n\n// Authenticated requests include the token in the headers\nconst uploadPhoto = (file) =>\n  api.post('/api/upload', file, {\n    headers: { Authorization: `Bearer ${getToken()}` }\n  });\nconst getCurrentUser = () =>\n  api.get('/api/users', { headers: { Authorization: `Bearer ${getToken()}` } });\nconst editUser = (user) =>\n  api.put('/api/users', user, { headers: { Authorization: `Bearer ${getToken()}` } });\n\nexport default {\n  signUp,\n  logIn,\n  verifyToken,\n  uploadPhoto,\n  getCurrentUser,\n  editUser\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAIC,IAAI,IAAKJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;AACvD,MAAME,KAAK,GAAIC,WAAW,IAAKP,GAAG,CAACK,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;AACnE;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAMC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAExD,MAAMC,WAAW,GAAIC,KAAK,IACxBZ,GAAG,CAACa,GAAG,CAAC,cAAc,EAAE;EAAEC,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUH,KAAK;EAAG;AAAE,CAAC,CAAC;;AAE5E;AACA,MAAMI,WAAW,GAAIC,IAAI,IACvBjB,GAAG,CAACK,IAAI,CAAC,aAAa,EAAEY,IAAI,EAAE;EAC5BH,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUP,QAAQ,CAAC,CAAC;EAAG;AACnD,CAAC,CAAC;AACJ,MAAMU,cAAc,GAAGA,CAAA,KACrBlB,GAAG,CAACa,GAAG,CAAC,YAAY,EAAE;EAAEC,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUP,QAAQ,CAAC,CAAC;EAAG;AAAE,CAAC,CAAC;AAC/E,MAAMW,QAAQ,GAAIf,IAAI,IACpBJ,GAAG,CAACoB,GAAG,CAAC,YAAY,EAAEhB,IAAI,EAAE;EAAEU,OAAO,EAAE;IAAEC,aAAa,EAAE,UAAUP,QAAQ,CAAC,CAAC;EAAG;AAAE,CAAC,CAAC;AAErF,eAAe;EACbL,MAAM;EACNG,KAAK;EACLK,WAAW;EACXK,WAAW;EACXE,cAAc;EACdC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}